{
    "openapi": "3.0.0",
    "info": {
        "title": "Superhero API",
        "version": "0.1"
    },
    "servers": [
        {
            "url": "http://localhost:8000"
        }
    ],
    "paths": {
        "/api": {
            "get": {
                "tags": [
                    "Endpoints"
                ],
                "summary": "Get list of endpoints",
                "description": "Returns list of endpoints",
                "operationId": "api",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No endpoints found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/cities": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get list of cities",
                "operationId": "cced4c622d2c63419fc7211320d896a6",
                "responses": {
                    "200": {
                        "description": "A list with cities"
                    }
                }
            }
        },
        "/api/city/{id}": {
            "get": {
                "tags": [
                    "City"
                ],
                "summary": "Get a city by id",
                "operationId": "07da2ed63caf41f44d4973bf54ec0835",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A city"
                    },
                    "404": {
                        "description": "City not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "City"
                ],
                "summary": "Update a city",
                "operationId": "95284c9184eee68461de63f5c738a246",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "example of the body request",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nantes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "City updated successfully"
                    },
                    "400": {
                        "description": "Invalid name supplied"
                    },
                    "404": {
                        "description": "City not found"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "City"
                ],
                "summary": "Delete a city",
                "operationId": "eac60f91698c8927d5f3cf1e3baa61f1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City deleted successfully"
                    },
                    "404": {
                        "description": "City not found"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/city": {
            "post": {
                "tags": [
                    "City"
                ],
                "summary": "Create a new city",
                "operationId": "b1855213aeeb3409390320a741e9e54c",
                "requestBody": {
                    "description": "example of the body request",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Nantes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "City created successfully"
                    },
                    "400": {
                        "description": "Invalid name supplied"
                    },
                    "409": {
                        "description": "City already exists"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/getgadget": {
            "get": {
                "tags": [
                    "Gadget"
                ],
                "summary": "Get list of gadgets",
                "operationId": "b7f2f8878039e427235e008047389ed3",
                "responses": {
                    "200": {
                        "description": "A list with gadgets"
                    }
                }
            }
        },
        "/api/creategadget": {
            "post": {
                "tags": [
                    "Gadget"
                ],
                "summary": "Create a gadget",
                "operationId": "d1e874091b0557eb3200a993b37b6508",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the gadget",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "example of the body request",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Bow"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Gadget created"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "409": {
                        "description": "Gadget already exists"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/getgroup": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get list of groups",
                "operationId": "4861e99ce0b18219280fabcb2d7bf0ff",
                "responses": {
                    "200": {
                        "description": "A list with groups"
                    }
                }
            }
        },
        "/api/creategroup": {
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "Create a group",
                "operationId": "9adf0bc6e30f3e1a7653d9922112f8ac",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Name of the group",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "example of the body request",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Avengers"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Group created"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "409": {
                        "description": "Group already exists"
                    }
                }
            }
        },
        "/api/heroes": {
            "get": {
                "tags": [
                    "Hero"
                ],
                "summary": "Get list of superheros",
                "description": "Returns list of superheros",
                "operationId": "getHero",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No superheros found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/hero": {
            "post": {
                "tags": [
                    "Hero"
                ],
                "summary": "Create a new hero",
                "description": "Create a new hero",
                "operationId": "createHero",
                "requestBody": {
                    "description": "example of the body request",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "banos"
                                    },
                                    "secret_identity": {
                                        "type": "string",
                                        "example": "banos2"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "hair_color": {
                                        "type": "string",
                                        "example": "black"
                                    },
                                    "origin_planet": {
                                        "type": "string",
                                        "example": "guezzland"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "guezz"
                                    },
                                    "userId": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Hero created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "201"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Hero created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "500"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/hero/{id}": {
            "get": {
                "tags": [
                    "Hero"
                ],
                "summary": "Get a hero",
                "description": "Get a hero",
                "operationId": "getHeroById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the hero to get",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hero found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "200"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Hero1"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No hero found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "404"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "No hero found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Hero"
                ],
                "summary": "Update a hero",
                "description": "Update a hero",
                "operationId": "updateHero",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the hero to get",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "requestBody": {
                    "description": "example of the body request",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "banos"
                                    },
                                    "secret_identity": {
                                        "type": "string",
                                        "example": "banos2"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "hair_color": {
                                        "type": "string",
                                        "example": "black"
                                    },
                                    "origin_planet": {
                                        "type": "string",
                                        "example": "guezzland"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "guezz"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Hero updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "200"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Hero updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No hero found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "404"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "No hero found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Hero"
                ],
                "summary": "Delete a hero",
                "description": "Delete a hero",
                "operationId": "deleteHero",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of the hero to delete",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hero deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "200"
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Hero deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "example": "500"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getsuperpower": {
            "get": {
                "tags": [
                    "SuperPower"
                ],
                "summary": "Get list of superpowers",
                "operationId": "d09b6212c12486d91f818b9d5662a098",
                "responses": {
                    "200": {
                        "description": "A list with superpowers",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "No superpowers found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/api/createsuperpower": {
            "post": {
                "tags": [
                    "SuperPower"
                ],
                "summary": "Create a new superpower",
                "operationId": "b27aa405694888c1dfbd26066e5ee081",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "example of the body request",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "SuperSpeed"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "SuperPower created successfully"
                    },
                    "400": {
                        "description": "Invalid name supplied"
                    },
                    "409": {
                        "description": "SuperPower already exists"
                    },
                    "500": {
                        "description": "Internal error"
                    }
                }
            }
        },
        "/api/getvehicule": {
            "get": {
                "tags": [
                    "Vehicule"
                ],
                "summary": "Get a list of vehicule",
                "operationId": "07cbbc79ab2ede91172db8e2303f14d2",
                "responses": {
                    "200": {
                        "description": "A list with vehicule",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "Vehicule1"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No vehicule found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "No vehicule found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/createvehicule": {
            "post": {
                "tags": [
                    "Vehicule"
                ],
                "summary": "Create a new vehicule",
                "operationId": "2b60e17dd689b160ce17914943677b50",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Vehicule name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Plane"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicule created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "msg": {
                                            "type": "string",
                                            "example": "Vehicule created"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid name provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid name provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Vehicule already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 409
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Vehicule already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}